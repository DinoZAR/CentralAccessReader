sum = munderover(SigmaBig mrow(munderover(mrow(+) mrow(+) mrow())) mrow()) -> 'the summation from {2}. from {3}, of'
sum = munderover(mrow(munderover(mrow(SigmaBig) mrow(+) mrow())) mrow(+) mrow()) -> 'the summation from {2}. from {3}, of'
sum = munderover(mrow(munderover(mrow(SigmaBig) mrow(+) mrow())) mrow(+) mrow()) -> 'the summation from {2}. from {3}, of'
sum = munderover(SigmaBig mrow(munderover(mrow(+) mrow(+) mrow())) mrow(+)) -> 'the summation from {2}. from {3}. to {4}, of'
sum = munderover(SigmaBig mrow(munderover(mrow(+) mrow(+) mrow())) mrow()) -> 'the summation from {2}. from {3}, of'
sum = munderover(SigmaBig mrow(+) mrow(+)) -> 'the summation from {2}, to {3}, of'
sum = munderover(SigmaBig mrow(+) mrow()) -> 'the summation from {2}, of'
sum = munderover(SigmaBig mrow() mrow(+)) -> 'the summation to {2}, of'
sum = munderover(SigmaBig mrow(+) ?) -> 'the summation from {2}, of'
sum = munderover(SigmaBig mrow() mrow()) -> 'the summation of'
sum = munderover(SigmaBig) -> 'the summation of'
sum = munderover(SigmaLone mrow(munderover(mrow(+) mrow(+) mrow())) mrow()) -> 'the summation from {2}. from {3}, of'
sum = munderover(mrow(munderover(mrow(SigmaLone) mrow(+) mrow())) mrow(+) mrow()) -> 'the summation from {2}. from {3}, of'
sum = munderover(mrow(munderover(mrow(SigmaLone) mrow(+) mrow())) mrow(+) mrow()) -> 'the summation from {2}. from {3}, of'
sum = munderover(SigmaLone mrow(munderover(mrow(+) mrow(+) mrow())) mrow(+)) -> 'the summation from {2}. from {3}. to {4}, of'
sum = munderover(SigmaLone mrow(munderover(mrow(+) mrow(+) mrow())) mrow()) -> 'the summation from {2}. from {3}, of'
sum = munderover(SigmaLone mrow(+) mrow(+)) -> 'the summation from {2}, to {3}, of'
sum = munderover(SigmaLone mrow(+) mrow()) -> 'the summation from {2}, of'
sum = munderover(SigmaLone mrow() mrow(+)) -> 'the summation to {2}, of'
sum = munderover(SigmaLone mrow(+) ?) -> 'the summation from {2}, of'
sum = munderover(SigmaLone mrow() mrow()) -> 'the summation of'
sum = munderover(SigmaLone) -> 'the summation of'

sum = munderover(mrow(SigmaBig) mrow(+) mrow ()) -> 'the summation from {2}, of'
sum = munderover(mrow(SigmaLone) mrow(+) mrow ()) -> 'the summation from {2}, of'

conjunctionSyn = munder(conjunction mrow(+)) -> 'the {1} from {2}, of'
disjunctionSyn = munder(disjunction mrow(+)) -> 'the {1} from {2}, of'
conjunctionSyn = msub(conjunction mrow(+)) -> 'the {1} from {2}, of'
disjunctionSyn = msub(disjunction mrow(+)) -> 'the {1} from {2}, of'

coproductSyn = munderover(coproduct mrow(+) mrow(+)) -> 'the {1}, from {2}, to {3}, of'
coproductSyn = munderover(coproduct mrow(+) mrow()) -> 'the {1} from {2}, of'
coproductSyn = munderover(coproduct mrow() mrow(+)) -> 'the {1} to {2}, of'
coproductSyn = munderover(coproduct mrow(+) ?) -> 'the {1} from {2}, of'
coproductSyn = munderover(coproduct ? ?) -> 'the {1}, of'
coproductSyn = munder(coproduct mrow(+)) -> 'the {1} from {2}, of'

integralSyn = munderover(areaIntegral mrow(+) mrow(+)) -> 'the {1}, from {2}, to {3}, of'
integralSyn = munderover(areaIntegral mrow(+) mrow()) -> 'the {1} from {2}, of'
integralSyn = munderover(areaIntegral mrow() mrow(+)) -> 'the {1} to {2}, of'
integralSyn = munderover(areaIntegral mrow(+) ?) -> 'the {1} from {2}, of'
integralSyn = munderover(areaIntegral ? ?) -> 'the {1}, of'

integralSyn = munderover(closedIntegral mrow(+) mrow(+)) -> 'the {1} from {2}, to {3}, of'
integralSyn = munderover(closedIntegral mrow(+) mrow()) -> 'the {1} from {2}, of'
integralSyn = munderover(closedIntegral mrow() mrow(+)) -> 'the {1} to {2}, of'
integralSyn = munderover(closedIntegral mrow(+) ?) -> 'the {1} from {2}, of'
integralSyn = munderover(closedIntegral ? ?) -> 'the integral of'

integralSyn = munderover(integralDouble mrow(+) mrow(+)) -> 'the definite {1} from {2}, to {3}, of'
integralSyn = munderover(integralDouble mrow(+) mrow()) -> 'the {1} from {2}, of'
integralSyn = munderover(integralDouble mrow() mrow(+)) -> 'the {1} to {2}, of'
integralSyn = munderover(integralDouble mrow(+) ?) -> 'the {1} from {2}, of'
integralSyn = munderover(integralDouble ? ?) -> 'the {1} of'

integralSyn = munderover(integralTriple mrow(+) mrow(+)) -> 'the definite {1} from {2}, to {3}, of'
integralSyn = munderover(integralTriple mrow(+) mrow()) -> 'the {1} from {2}, of'
integralSyn = munderover(integralTriple mrow() mrow(+)) -> 'the {1} to {2}, of'
integralSyn = munderover(integralTriple mrow(+) ?) -> 'the {1} from {2}, of'
integralSyn = munderover(integralTriple ? ?) -> 'the {1} of'

integralSyn = munderover(integral mrow(+) mrow(+)) -> 'the definite {1} from {2}, to {3}, of'
integralSyn = munderover(integral mrow(+) mrow()) -> 'the {1} from {2}, of'
integralSyn = munderover(integral mrow() mrow(+)) -> 'the {1} to {2}, of'
integralSyn = munderover(integral mrow(+) ?) -> 'the {1} from {2}, of'
integralSyn = munderover(integral ? ?) -> 'the {1} of'

integralSyn = munderover(integralCCW mrow(+) mrow(+)) -> 'the{1} from {2}, to {3}, of'
integralSyn = munderover(integralCCW mrow(+) mrow()) -> 'the {1} from {2}, of'
integralSyn = munderover(integralCCW mrow() mrow(+)) -> 'the {1} to {2}, of'
integralSyn = munderover(integralCCW mrow(+) ?) -> 'the {1} from {2}, of'
integralSyn = munderover(integralCCW ? ?) -> 'the {1} of'

integralSyn = munderover(integralCon mrow(?) mrow(?)) -> 'the contour integral from {2}, to {3}, of'
integralSyn = munderover(integralCon mrow(+) mrow()) -> 'the {1} from {2}, of'
integralSyn = munderover(integralCon mrow() mrow(+)) -> 'the {1} to {2}, of'
integralSyn = munderover(integralCon mrow(+) ?) -> 'the {1} from {2}, of'
integralSyn = munderover(integralCon ? ?) -> 'the contour integral of'

integralSyn = munderover(integralCW mrow(+) mrow(+)) -> 'the {1} from {2}, to {3}, of'
integralSyn = munderover(integralCW mrow(+) mrow()) -> 'the {1} from {2}, of'
integralSyn = munderover(integralCW mrow() mrow(+)) -> 'the {1} to {2}, of'
integralSyn = munderover(integralCW mrow(+) ?) -> 'the {1} from {2}, of'
integralSyn = munderover(integralCW ? ?) -> 'the {1} of'

integralSyn = munderover(volumeIntegral mrow(+) mrow(+)) -> 'the {1} from {2}, to {3}, of'
integralSyn = munderover(volumeIntegral mrow(+) mrow()) -> 'the {1} from {2}, of'
integralSyn = munderover(volumeIntegral mrow() mrow(+)) -> 'the {1} to {2}, of'
integralSyn = munderover(volumeIntegral mrow(+) ?) -> 'the {1} from {2}, of'
integralSyn = munderover(volumeIntegral ? ?) -> 'the {1} of'

intersectionSyn = munderover(intersection mrow(+) mrow(+)) -> 'the {1} from {2}, to {3}, of'
intersectionSyn = munderover(intersection mrow(+) mrow()) -> 'the {1} from {2}, of'
intersectionSyn = munderover(intersection mrow() mrow(+)) -> 'the {1} to {2}, of'
intersectionSyn = munderover(intersection mrow(+) ?) -> 'the {1} from {2}, of'
intersectionSyn = munderover(intersection ? ?) -> 'the {1} of'

productSyn = munderover(product mrow(+) mrow(+)) -> 'the {1} from {2}, to {3}, of'
productSyn = munderover(product mrow(+) mrow()) -> 'the {1} from {2}, of'
productSyn = munderover(product mrow() mrow(+)) -> 'the {1} to {2}, of'
productSyn = munderover(product mrow(+) ?) -> 'the {1} from {2}, of'
productSyn = munderover(product ? ?) -> 'the {1} of'
productSyn = munder(product mrow(+)) -> 'the {1} from {2}, of'

unionSyn = munderover(union mrow(+) mrow(+)) -> 'the {1} from {2}, to {3}, of'
unionSyn = munderover(union mrow(+) mrow()) -> 'the {1} from {2}, of'
unionSyn = munderover(union mrow() mrow(+)) -> 'the {1} to {2}, of'
unionSyn = munderover(union mrow(+) ?) -> 'the {1} from {2}, of'
unionSyn = munderover(union) -> 'the {1} of'

conjunctionSyn = munderover(conjunction mrow(+) mrow(+)) -> 'the {1} from {2}, to {3}, of'
conjunctionSyn = munderover(conjunction mrow(+) mrow()) -> 'the {1} from {2}, of'
conjunctionSyn = munderover(conjunction mrow() mrow(+)) -> 'the {1} to {2}, of'
conjunctionSyn = munderover(conjunction mrow(+) ?) -> 'the {1} from {2}, of'
conjunctionSyn = munderover(conjunction ? ?) -> 'the {1}'

disjunctionSyn = munderover(disjunction mrow(+) mrow(+)) -> 'the {1} from {2}, to {3}, of'
disjunctionSyn = munderover(disjunction mrow(+) mrow()) -> 'the {1} from {2}, of'
disjunctionSyn = munderover(disjunction mrow() mrow(+)) -> 'the {1} to {2}, of'
disjunctionSyn = munderover(disjunction mrow(+) ?) -> 'the {1} from {2}, of'
disjunctionSyn = munderover(disjunction ? ?) -> 'the {1}'

coproductSyn = msubsup(coproduct mrow(+) mrow(+)) -> 'the {1}, from {2}, to {3}, of'
coproductSyn = msubsup(coproduct mrow(+) mrow()) -> 'the {1} from {2}, of'
coproductSyn = msubsup(coproduct mrow() mrow(+)) -> 'the {1} to {2}, of'
coproductSyn = msubsup(coproduct mrow(+)) -> 'the {1} from {2}, of'
coproductSyn = msubsup(coproduct) -> 'the {1}, of'
coproductSyn = msub(coproduct mrow(+)) -> 'the {1} from {2}, of'
coproductSyn = coproduct mrow(+) -> 'the {1} of {2}'

integralSyn = msubsup(areaIntegral mrow(+) mrow(+)) -> 'the {1}, from {2}, to {3}, of'
integralSyn = msubsup(areaIntegral mrow(+) mrow()) -> 'the {1} from {2}, of'
integralSyn = msubsup(areaIntegral mrow() mrow(+)) -> 'the {1} to {2}, of'
integralSyn = msubsup(areaIntegral mrow(+)) -> 'the {1} from {2}, of'
integralSyn = msubsup(areaIntegral) -> 'the {1}, of'
integralSyn = areaIntegral mrow(+) -> 'the {1} of {2}'

integralSyn = msubsup(closedIntegral mrow(+) mrow(+)) -> 'the {1} from {2}, to {3}, of'
integralSyn = msubsup(closedIntegral mrow(+) mrow()) -> 'the {1} from {2}, of'
integralSyn = msubsup(closedIntegral mrow() mrow(+)) -> 'the {1} to {2}, of'
integralSyn = msubsup(closedIntegral mrow(+)) -> 'the {1} from {2}, of'
integralSyn = msubsup(closedIntegral) -> 'the integral of'
integralSyn = closedIntegral mrow(+) -> 'the {1} of {2}'

integralSyn = msubsup(integralDouble mrow(+) mrow(+)) -> 'the definite {1} from {2}, to {3}, of'
integralSyn = msubsup(integralDouble mrow(+) mrow()) -> 'the {1} from {2}, of'
integralSyn = msubsup(integralDouble mrow() mrow(+)) -> 'the {1} to {2}, of'
integralSyn = msubsup(integralDouble mrow(+)) -> 'the {1} from {2}, of'
integralSyn = msubsup(integralDouble) -> 'the {1} of'
integralSyn = integralDouble mrow(+) -> 'the {1} of {2}'

integralSyn = msubsup(integralTriple mrow(+) mrow(+)) -> 'the definite {1} from {2}, to {3}, of'
integralSyn = msubsup(integralTriple mrow(+) mrow()) -> 'the {1} from {2}, of'
integralSyn = msubsup(integralTriple mrow() mrow(+)) -> 'the {1} to {2}, of'
integralSyn = msubsup(integralTriple mrow(+)) -> 'the {1} from {2}, of'
integralSyn = msubsup(integralTriple) -> 'the {1} of'
integralSyn = integralTriple mrow(+) -> 'the {1} of {2}'

integralSyn = msubsup(integral mrow(+) mrow(+)) -> 'the definite {1} from {2}, to {3}, of'
integralSyn = msubsup(integral mrow(+) mrow()) -> 'the {1} from {2}, of'
integralSyn = msubsup(integral mrow() mrow(+)) -> 'the {1} to {2}, of'
integralSyn = msubsup(integral mrow(+)) -> 'the {1} from {2}, of'
integralSyn = msubsup(integral) -> 'the {1} of'
integralSyn = integral mrow(+) -> 'the {1} of {2}'

integralSyn = msubsup(integralCCW mrow(+) mrow(+)) -> 'the {1} from {2}, to {3}, of'
integralSyn = msubsup(integralCCW mrow(+) mrow()) -> 'the {1} from {2}, of'
integralSyn = msubsup(integralCCW mrow() mrow(+)) -> 'the {1} to {2}, of'
integralSyn = msubsup(integralCCW mrow(+)) -> 'the {1} from {2}, of'
integralSyn = msubsup(integralCCW) -> 'the {1} of'
integralSyn = integralCCW mrow(+) -> 'the {1} of {2}'

integralSyn = msubsup(integralCon mrow(?) mrow(?)) -> 'the contour integral from {2}, to {3}, of'
integralSyn = msubsup(integralCon mrow(+) mrow()) -> 'the contour integral from {2}, of'
integralSyn = msubsup(integralCon mrow() mrow(+)) -> 'the contour integral to {2}, of'
integralSyn = msubsup(integralCon mrow(+)) -> 'the contour integral from {2}, of'
integralSyn = msubsup(integralCon) -> 'the contour integral of'
integralSyn = integralCon mrow(+) -> 'the contour integral of {2}'

integralSyn = msubsup(integralCW mrow(+) mrow(+)) -> 'the {1} from {2}, to {3}, of'
integralSyn = msubsup(integralCW mrow(+) mrow()) -> 'the {1} from {2}, of'
integralSyn = msubsup(integralCW mrow() mrow(+)) -> 'the {1} to {2}, of'
integralSyn = msubsup(integralCW mrow(+)) -> 'the {1} from {2}, of'
integralSyn = msubsup(integralCW) -> 'the {1} of'
integralSyn = integralCW mrow(+) -> 'the {1} of {2}'

integralSyn = msubsup(volumeIntegral mrow(+) mrow(+)) -> 'the {1} from {2}, to {3}, of'
integralSyn = msubsup(volumeIntegral mrow(+) ?) -> 'the {1} from {2}, of'
integralSyn = msubsup(volumeIntegral mrow() mrow(+)) -> 'the {1} to {2}, of'
integralSyn = msubsup(volumeIntegral mrow(+)) -> 'the {1} from {2}, of'
integralSyn = msubsup(volumeIntegral) -> 'the {1} of'
integralSyn = volumeIntegral mrow(+) -> 'the {1} of {2}'

intersectionSyn = msubsup(intersection mrow(+) mrow(+)) -> 'the {1} from {2}, to {3}, of'
intersectionSyn = msubsup(intersection mrow(+) mrow()) -> 'the {1} from {2}, of'
intersectionSyn = msubsup(intersection mrow() mrow(+)) -> 'the {1} to {2}, of'
intersectionSyn = msubsup(intersection mrow(+)) -> 'the {1} from {2}, of'
intersectionSyn = msubsup(intersection) -> 'the {1} of'
intersectionSyn = intersection mrow(+) -> 'the {1} of {2}'

productSyn = msubsup(product mrow(+) mrow(+)) -> 'the {1} from {2}, to {3}, of'
productSyn = msubsup(product mrow(+) mrow()) -> 'the {1} from {2}, of'
productSyn = msubsup(product mrow() mrow(+)) -> 'the {1} to {2}, of'
productSyn = msubsup(product mrow(+)) -> 'the {1} from {2}, of'
productSyn = msubsup(product) -> 'the {1} of'
productSyn = msub(product mrow(+)) -> 'the {1} from {2}, of'
productSyn = product mrow(+) -> 'the {1} of {2}'

unionSyn = msubsup(union mrow(+) mrow(+)) -> 'the {1} from {2}, to {3}, of'
unionSyn = msubsup(union mrow(+) mrow()) -> 'the {1} from {2}, of'
unionSyn = msubsup(union mrow() mrow(+)) -> 'the {1} to {2}, of'
unionSyn = msubsup(union mrow(+)) -> 'the {1} from {2}, of'
unionSyn = msubsup(union) -> 'the {1} of'
unionSyn = unionSyn mrow(+) -> 'the {1} of {2}'

conjunctionSyn = msubsup(conjunction mrow(+) mrow(+)) -> 'the {1} from {2}, to {3}, of'
conjunctionSyn = msubsup(conjunction mrow(+) mrow()) -> 'the {1} from {2}, of'
conjunctionSyn = msubsup(conjunction mrow() mrow(+)) -> 'the {1} to {2}, of'
conjunctionSyn = msubsup(conjunction mrow(+)) -> 'the {1} from {2}, of'
conjunctionSyn = msubsup(conjunction) -> 'the {1}'
conjunctionSyn = conjunction mrow(+) -> 'the {1} of {2}'

disjunctionSyn = msubsup(disjunction mrow(+) mrow(+)) -> 'the {1} from {2}, to {3}, of'
disjunctionSyn = msubsup(disjunction mrow(+) mrow()) -> 'the {1} from {2}, of'
disjunctionSyn = msubsup(disjunction mrow() mrow(+)) -> 'the {1} to {2}, of'
disjunctionSyn = msubsup(disjunction mrow(+)) -> 'the {1} from {2}, of'
disjunctionSyn = msubsup(disjunction) -> 'the {1}'
disjunctionSyn = disjunction mrow(+) -> 'the {1} of {2}'
